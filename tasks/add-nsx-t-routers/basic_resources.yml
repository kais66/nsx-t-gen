---
- hosts: 127.0.0.1
  connection: local
  become: yes
  vars_files:
    - vars.yml
  tasks:
    # TODO: does not support tag
    - name: Create Transport Zones
      nsxt_transport_zones:
        hostname: "{{hostvars['localhost'].nsx_manager_ip}}"
        username: "{{hostvars['localhost'].nsx_manager_username}}"
        password: "{{hostvars['localhost'].nsx_manager_password}}"
        validate_certs: False
        resource_type: "TransportZone"
        display_name: "{{item.display_name}}"
        description: "NSX {{item.transport_type}} Transport Zone"
        transport_type: "{{item.transport_type}}"
        host_switch_name: "{{item.host_switch_name}}"
        state: "present"
      with_items:
        - "{{transportzones}}"

#     - name: Create uplink profile
#       nsxt_uplink_profiles:
#         hostname: "{{hostvars['localhost'].nsx_manager_ip}}"
#         username: "{{hostvars['localhost'].nsx_manager_username}}"
#         password: "{{hostvars['localhost'].nsx_manager_password}}"
#         validate_certs: False
#         resource_type: UplinkHostSwitchProfile
#         display_name: "{{item.display_name}}"
#         mtu: 1600
#         teaming: "{{item.teaming}}"
#         transport_vlan: "{{item.transport_vlan}}"
#         state: "present"
#       with_items:
#         - "{{uplink_profiles}}"

# # # TODO: support tags
#     - name: Create VTEP IP pool
#       nsxt_ip_pools:
#         hostname: "{{hostvars['localhost'].nsx_manager_ip}}"
#         username: "{{hostvars['localhost'].nsx_manager_username}}"
#         password: "{{hostvars['localhost'].nsx_manager_password}}"
#         validate_certs: False
#         display_name: "{{hostvars['localhost'].vtep_ip_pool_name}}"
#         subnets:
#         - cidr: "{{hostvars['localhost'].vtep_ip_pool_cidr}}"
#           allocation_ranges:
#           - start: "{{ hostvars['localhost'].vtep_ip_pool_start }}"
#             end: "{{ hostvars['localhost'].vtep_ip_pool_end }}"
#           gateway_ip: "{{hostvars['localhost'].vtep_ip_pool_gateway}}"
#         state: present
#       register: vtep_pool_object

# # ### TODO
#     - name: Create transport node
#       nsxt_transport_nodes:
#         hostname: "{{hostvars['localhost'].nsx_manager_ip}}"
#         username: "{{hostvars['localhost'].nsx_manager_username}}"
#         password: "{{hostvars['localhost'].nsx_manager_password}}"
#         validate_certs: False
#         resource_type: TransportNode
#         display_name: "{{hostvars[item].transport_node_name}}"
#         description: Edge Transport Node for {{hostvars[item].ip}}
#         host_switch_spec:
#           resource_type: StandardHostSwitchSpec
#           host_switches:
#           - host_switch_profiles:
#             - name: "{{edge_uplink_prof}}"
#               type: UplinkHostSwitchProfile
#             host_switch_name: "{{overlay_host_switch}}"
#             pnics:
#             - device_name: fp-eth1
#               uplink_name: "{{uplink_name}}"
#             ip_assignment_spec:
#               resource_type: StaticIpPoolSpec
#               ip_pool_name: "{{hostvars['localhost'].vtep_ip_pool_name}}"
#           - host_switch_profiles:
#             - name: "{{edge_uplink_prof}}"
#               type: UplinkHostSwitchProfile
#             host_switch_name: "{{vlan_host_switch}}"
#             pnics:
#             - device_name: fp-eth0
#               uplink_name: "{{uplink_name}}"
#         transport_zone_endpoints:
#         - transport_zone_name: "{{overlay_transport_zone}}"
#         - transport_zone_name: "{{vlan_transport_zone}}"
#         fabric_node_name: "{{hostvars[item].edge_fabric_node_name}}"
#         state: present
#       with_items:
#         - "{{groups['edge_nodes']}}"

#     - name: NSX-T Edge Cluster
#       nsxt_edge_clusters:
#         hostname: "{{hostvars['localhost'].nsx_manager_ip}}"
#         username: "{{hostvars['localhost'].nsx_manager_username}}"
#         password: "{{hostvars['localhost'].nsx_manager_password}}"
#         display_name: "{{ hostvars['localhost'].edge_cluster }}"
#         description: "Default Edge Cluster"
#         # create a list with member.ip for member in edge_nodes
#         members: "{{ groups['edge_nodes']|map('extract', hostvars, 'ip') | list }}"
#         state: present
#       register: edge_cluster

#     - name: NSX-T T0 Logical Router
#       nsxt_logical_routers:
#         hostname: "{{hostvars['localhost'].nsx_manager_ip}}"
#         username: "{{hostvars['localhost'].nsx_manager_username}}"
#         password: "{{hostvars['localhost'].nsx_manager_password}}"
#         validate_certs: False
#         resource_type: LogicalRouter
#         description: "NSX-T T0 Logical Router"
#         display_name: "tier-0"
#         edge_cluster_id: "{{ edge_cluster.id }}"
#         # advanced_config:
#         #   external_transit_networks:
#         #   - "100.64.1.0/10"
#         #   internal_transit_network: "169.254.0.0/28"
#         router_type: TIER0
#         high_availability_mode: ACTIVE_STANDBY
#       register: t0

#     - name: Create VLAN logical switch
#       nsxt_logical_switches:
#         hostname: "{{hostvars['localhost'].nsx_manager_ip}}"
#         username: "{{hostvars['localhost'].nsx_manager_username}}"
#         password: "{{hostvars['localhost'].nsx_manager_password}}"
#         validate_certs: False
#         display_name: "{{vlan_logical_switch}}"
#         replication_mode: SOURCE
#         admin_state: UP
#         transport_zone_name: "{{vlan_transport_zone}}"
#         vlan: "{{ hostvars['localhost'].edge_uplink_profile_vlan }}"
#         state: "present"

#     - name: Logical Switch Port for uplink1
#       nsxt_logical_ports:
#         hostname: "{{hostvars['localhost'].nsx_manager_ip}}"
#         username: "{{hostvars['localhost'].nsx_manager_username}}"
#         password: "{{hostvars['localhost'].nsx_manager_password}}"
#         validate_certs: False
#         logical_switch_name: "{{vlan_logical_switch}}"
#         # attachment:
#         #   attachment_type: VIF
#         #   id: vif1
#         admin_state: UP

## TODO: need logical router uplink port module support
## nsxt_t0_uplink, nsxt_t0_ha_vip, nsxt_static_route

# ## TODO: switch, router port, switch port
############################

## convert ESX hosts to fabric and then transport nodes
    # - name: Add fabric node
    #   nsxt_fabric_nodes:
    #     hostname: "{{hostvars['localhost'].nsx_manager_ip}}"
    #     username: "{{hostvars['localhost'].nsx_manager_username}}"
    #     password: "{{hostvars['localhost'].nsx_manager_password}}"
    #     validate_certs: False
    #     resource_type: "HostNode"
    #     display_name: "{{item.display_name}}"
    #     ip_addresses: "{{item.ip_addresses}}"
    #     os_type: "{{item.os_type}}"
    #     os_version: "{{item.os_version}}"
    #     host_credential:
    #         username: "{{item.host_username}}"
    #         password: "{{item.host_password}}"
    #         thumbprint: "{{item.host_thumbprint}}"
    #     state: "absent"
    #   with_items:
    #     - "{{groups['esx_hosts']}}"

    # - name: Create transport node for ESX hosts
    #   nsxt_transport_nodes:
    #     hostname: "{{hostvars['localhost'].nsx_manager_ip}}"
    #     username: "{{hostvars['localhost'].nsx_manager_username}}"
    #     password: "{{hostvars['localhost'].nsx_manager_password}}"
    #     validate_certs: False
    #     resource_type: TransportNode
    #     display_name: "{{hostvars[item].transport_node_name}}"
    #     description: Edge Transport Node for {{hostvars[item].ip}}
    #     host_switch_spec:
    #       resource_type: StandardHostSwitchSpec
    #       host_switches:
    #       - host_switch_profiles:
    #         - name: "{{esxi_overlay_profile_name}}"
    #           type: UplinkHostSwitchProfile
    #         host_switch_name: "{{overlay_host_switch}}"
    #         pnics:
    #         - device_name: "{{TODO}}"
    #           uplink_name: "{{TODO}}"
    #         ip_assignment_spec:
    #           resource_type: StaticIpPoolSpec
    #           ip_pool_name: "{{hostvars['localhost'].vtep_ip_pool_name}}"
    #     transport_zone_endpoints:
    #     - transport_zone_name: "{{overlay_transport_zone}}"
    #     fabric_node_name: "{{hostvars[item].edge_fabric_node_name}}"
    #     state: present
    #   with_items:
    #     - "{{groups['esx_hosts']}}"
    #